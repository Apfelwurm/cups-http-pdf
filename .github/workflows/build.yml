name: Build and Release Debian Package

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract package version
        id: version
        run: |
          set -e
          pkgver="$(dpkg-parsechangelog -S Version)"
          echo "Package version: $pkgver"
          echo "version=$pkgver" >> $GITHUB_OUTPUT
          # Detect existing tag
          if git rev-parse -q --verify "refs/tags/v$pkgver" >/dev/null; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "Tag v$pkgver already exists; release will be skipped.";
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            devscripts \
            debhelper \
            fakeroot \
            curl \
            python3

      - name: Build package
        run: |
          debuild -us -uc

      - name: List artifacts
        run: ls -l dist || (echo 'dist missing' && exit 1)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: dist

      - name: Create Release
        if: steps.version.outputs.tag_exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: cups-http-pdf ${{ steps.version.outputs.version }}
          files: dist/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip Release (tag exists)
        if: steps.version.outputs.tag_exists == 'true'
        run: echo "Release already exists for version ${{ steps.version.outputs.version }}; skipping."
